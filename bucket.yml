AWSTemplateFormatVersion: "2010-09-09"
Description: "Create an S3 bucket for partner data with access restricted to LabUser"

Parameters:
  BucketName:
    Type: String
    Default: "athena-data-bucket"
    Description: "Name of the S3 bucket to store exported data"

  LabAccountID:
    Type: String
    Description: "Id of the only account"

Resources:
  PartnerDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${BucketName}-${LabAccountID}
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: "s3:ObjectCreated:*"
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: ".txt"
            Function: !GetAtt ProcessTextLambda.Arn
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  ProcessTextLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: ProcessS3TextToHTML
      Runtime: python3.9
      Role: !Sub arn:aws:iam::${LabAccountID}:role/LabRole
      Handler: index.lambda_handler
      Timeout: 10
      Code:
        ZipFile: |
          import boto3
          import os

          s3 = boto3.client('s3')

          def lambda_handler(event, context):
              bucket = event['Records'][0]['s3']['bucket']['name']
              key = event['Records'][0]['s3']['object']['key']

              if not key.endswith(".txt"):
                  return

              # Read text file
              response = s3.get_object(Bucket=bucket, Key=key)
              file_content = response['Body'].read().decode('utf-8')

              # Create index.html
              html_content = f"<pre>{file_content}</pre>"

              # Upload index.html
              s3.put_object(
                  Bucket=bucket,
                  Key="index.html",
                  Body=html_content,
                  ContentType="text/html",
                  ACL="public-read"
              )

              return {"statusCode": 200, "body": "HTML file created"}

  S3LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ProcessTextLambda
      Principal: s3.amazonaws.com
      SourceArn: !Sub "arn:aws:s3:::${BucketName}-${LabAccountID}"

Outputs:
  Bucket:
    Description: "S3 bucket for partner data"
    Value: !Ref PartnerDataBucket
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", PartnerDataBucket ] ]
  
