---
- name: Create LoadBalancer service and get external IP and node IPs
  hosts: localhost
  vars:
    project_id: "{{ project_id }}"
    cluster_name: "{{ cluster_name }}"
    region: "{{ region }}"
    loadbalancer_name: "cloudshirt-service"
    output_file: "gke_ips.json"
  tasks:
    - name: Authenticate kubectl with GKE cluster
      ansible.builtin.shell: |
        gcloud container clusters get-credentials {{ cluster_name }} --region {{ region }} --project {{ project_id }}
      environment:
        CLOUDSDK_CORE_PROJECT: "{{ project_id }}"

    - name: Create LoadBalancer service for CloudShirt app
      kubernetes.core.k8s:
        state: present
        namespace: default
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: "{{ loadbalancer_name }}"
          spec:
            type: LoadBalancer
            selector:
              app: cloudshirt
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80
            sessionAffinity: ClientIP
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 2137
      register: service_output

    - name: Wait for LoadBalancer IP to be assigned
      shell: kubectl get svc {{ loadbalancer_name }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: lb_ip
      until: lb_ip.stdout != ""
      retries: 10
      delay: 15

    - name: Output LoadBalancer external IP
      set_fact:
        loadbalancer_ip: "{{ lb_ip.stdout }}"

    - name: Get external IP addresses of GKE nodes
      ansible.builtin.shell: |
        kubectl get nodes -o=jsonpath='{.items[*].status.addresses[?(@.type=="ExternalIP")].address}'
      register: node_ips_raw

    - name: Parse external IPs into list
      set_fact:
        node_ips: "{{ node_ips_raw.stdout.split(' ') }}"

    - name: Write IP addresses to file
      copy:
        content: |
          {
            "loadbalancer_ip": "{{ loadbalancer_ip }}",
            "node_ips": {{ node_ips }}
          }
        dest: "{{ output_file }}"