- name: Setup Kubernetes Cluster
  hosts: all
  become: yes
  tasks:
    - name: Update package index and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Load required kernel modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter
      notify: Reload sysctl system

    - name: Load overlay module
      modprobe:
        name: overlay
        state: present

    - name: Load br_netfilter module
      modprobe:
        name: br_netfilter
        state: present

    - name: Set kernel parameters
      sysctl:
        sysctl_set: yes
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
      loop:
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: 1 }
        - { name: 'net.bridge.bridge-nf-call-iptables', value: 1 }
        - { name: 'net.ipv4.ip_forward', value: 1 }
      notify: Reload sysctl system

    - name: Prepare apt for Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg2
        state: present

    - name: Add Kubernetes keyring directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Add Kubernetes repository key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes APT repository
      shell: echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" > /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Update the package list
      apt:
        update_cache: yes

    - name: Install Kubernetes packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Hold Kubernetes packages
      command: apt-mark hold kubelet kubeadm kubectl

    - name: Disable swap
      command: swapoff -a
      tags: swap

    - name: Remove swap from fstab
      replace:
        path: /etc/fstab
        regexp: '^(.+\\s+swap\\s+.+)'
        replace: '# \\1'
        backup: yes
      tags: swap

    - name: Install containerd
      apt:
        name: containerd
        state: present

    - name: Create containerd configuration directory
      file:
        path: /etc/containerd
        state: directory

    - name: Generate containerd default configuration
      shell: |
        containerd config default > /etc/containerd/config.toml
      args:
        creates: /etc/containerd/config.toml

    - name: Set systemd as cgroup driver in containerd
      lineinfile:
        dest: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        line: 'SystemdCgroup = true'

    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Verify containerd is running
      command: systemctl is-active --quiet containerd

    - name: Enable and start kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started

- name: Initialize Kubernetes Master
  hosts: kube_master
  become: yes
  tasks:
    - name: Initialize Kubernetes cluster using kubeadm
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      register: kubeadm_init
      ignore_errors: yes

    - name: Set up local kubeconfig
      file:
        path: /home/ubuntu/.kube
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755

    - name: Copy Kubernetes admin.conf
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: 0644

    - name: Apply pod network add-on (Flannel)
      shell: |
        kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Retrieve and print join command
      command:
        cmd: kubeadm token create --print-join-command
      register: join_command

  handlers:
    - name: Reload sysctl system
      command: sysctl --system